Giving tasks:
MASTER -> SLAVE:  "TASK X Y"

Checking slave state:

SLAVE STATES:
WORKING 0
RETURN  1
IDLE    2

MASTER STATES:// not important for protocol
WORKING 0
IDLE    1

Checking slaves:
// returns 1 byte
MASTER -> SLAVE "STAT"
SLAVE -> MASTER "0"// WORKING STATE
SLAVE -> MASTER "1"// RETURNING STATE
SLAVE -> MASTER "2"// IDLE


Scheduling:
MASTER -> SLAVE: "TASKXX", X is 4 bytes, first X is lower bound, second X is upper bound
...

Result:
MASTER -> SLAVE: "RSLT"
SLAVE  -> MASTER: sends 4 byte for next result, first byte is most significant byte, etc.. ex. [1][2][3][4] -> 100000000000 
		  if there is no more numbers, then slave returns 0

Evaluating time:

// returns 4 bytes (long)
MASTER -> SLAVE: "TIME"
SLAVE  -> MASTER: "x" long number (4 bytes) if not in woring state, returns all zeros


IF STATE IDLE
 - SCHEDULE TASK!

IF STATE WORKING:
 - CAN REQUEST FOR STATUS
 - CAN REQUEST FOR TIME

IF STATE WAITING:
 - CAN REQUEST FOR RESULT ( -> IDLE )





